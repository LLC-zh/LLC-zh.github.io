<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LLC BLOG</title>
  
  
  <link href="https://llc-zh.github.io/atom.xml" rel="self"/>
  
  <link href="https://llc-zh.github.io/"/>
  <updated>2021-09-13T03:42:17.423Z</updated>
  <id>https://llc-zh.github.io/</id>
  
  <author>
    <name>李巫师</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据库学习</title>
    <link href="https://llc-zh.github.io/2021/09/13/01/"/>
    <id>https://llc-zh.github.io/2021/09/13/01/</id>
    <published>2021-09-13T03:35:55.000Z</published>
    <updated>2021-09-13T03:42:17.423Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><h4 id="关系型数据库：MySQL，Oracle"><a href="#关系型数据库：MySQL，Oracle" class="headerlink" title="关系型数据库：MySQL，Oracle"></a>关系型数据库：MySQL，Oracle</h4><h4 id="文档型数据库：MongoDB"><a href="#文档型数据库：MongoDB" class="headerlink" title="文档型数据库：MongoDB"></a>文档型数据库：MongoDB</h4><h4 id="分布式文件系统：FastDFS"><a href="#分布式文件系统：FastDFS" class="headerlink" title="分布式文件系统：FastDFS"></a>分布式文件系统：FastDFS</h4><h4 id="搜索引擎：solr-elasticsearch"><a href="#搜索引擎：solr-elasticsearch" class="headerlink" title="搜索引擎：solr elasticsearch"></a>搜索引擎：solr elasticsearch</h4><h4 id="内存数据库：Redis-Tair、Memache…"><a href="#内存数据库：Redis-Tair、Memache…" class="headerlink" title="内存数据库：Redis Tair、Memache…"></a>内存数据库：Redis Tair、Memache…</h4><span id="more"></span><hr><h3 id="NoSQL的四大分类"><a href="#NoSQL的四大分类" class="headerlink" title="NoSQL的四大分类"></a>NoSQL的四大分类</h3><h4 id="kv键值对"><a href="#kv键值对" class="headerlink" title="kv键值对:"></a>kv键值对:</h4><ul><li>新浪：Redis</li><li>美团：Redis+Tair</li><li>阿里、百度：Redis+memecache</li></ul><h4 id="文档型数据库（bson格式和json一样）"><a href="#文档型数据库（bson格式和json一样）" class="headerlink" title="文档型数据库（bson格式和json一样）"></a>文档型数据库（bson格式和json一样）</h4><ul><li>MongoDB（一般必须掌握）<ul><li>MongoDB是一个基于分布式文件存储的数据库，C++编写，主要用来处理大量的文档！</li><li>MongoDB是一个介于关系型数据库和非关系型数据中中间的产品！MongoDB是非关系型数据库功能最丰富，最像关系型数据据库的！</li></ul></li><li>ConthDB</li></ul><h4 id="列存储数据库"><a href="#列存储数据库" class="headerlink" title="列存储数据库"></a>列存储数据库</h4><ul><li>HBase</li><li>分布式文件系统</li></ul><h4 id="图关系（Graph）数据库"><a href="#图关系（Graph）数据库" class="headerlink" title="图关系（Graph）数据库"></a>图关系（Graph）数据库</h4><ul><li>他不是存图形，存放的是关系（比如社交朋友圈，广告推荐）-&gt;图论</li><li>Neo4j，InfoGrid</li></ul><hr><p><img src="C:\Users\jl\Pictures\Java后端开发学习路线.png" alt="学习路线" title="全栈"></p><hr><h1 id="Redis入门"><a href="#Redis入门" class="headerlink" title="Redis入门"></a>Redis入门</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p>Redis是什么?</p></blockquote><p>Redis（Remote Dictionary Server )，即远程字典服务</p><p>是一个开源的使用ANSI <a href="https://baike.baidu.com/item/C%E8%AF%AD%E8%A8%80">C语言</a>编写、支持网络、可基于内存亦可持久化的日志型、Key-Value<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93/103728">数据库</a>，并提供多种语言的API</p><blockquote><p>Redis能干嘛?</p></blockquote><p>1、内存存储，持久化，内存中是断电即失，所以持久化很重要（rdb、aof）</p><p>2、效率高，可以用于高速缓存</p><p>3、发布订阅系统</p><p>4、地图信息分析</p><p>5、计时器、计数器（浏览量！）</p><p>6、……</p><blockquote><p>特性</p></blockquote><p>1、多样的数据类型</p><p>2、持久化</p><p>3、集群</p><p>4、事务</p><p>……</p><blockquote><p>Redis安装</p></blockquote><p>略</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><blockquote><p>Linux下使用Redis</p></blockquote><ul><li><p>dockers容器下使用</p><ul><li>查看进项id<ul><li>docker ps</li></ul></li><li>进入Redis-cli客户端<ul><li>docker exec -it 5862ac8c1778 redis-cli    （5862ac8c1778 是进项id）</li><li>ping—&gt;pong（成功！！）</li></ul></li></ul></li><li><p>Redis客户端</p><ul><li><p>```bash<br>127.0.0.1:6379&gt; keys *    #查看数据库所有的key</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- ```bash</span><br><span class="line">  127.0.0.1:6379&gt; dbsize#查看数据库的大小</span><br><span class="line">  (integer) 19</span><br></pre></td></tr></table></figure></li><li><p>```bash<br>127.0.0.1:6379&gt; select 3    #切换数据库（总共有16个数据库，0~15）<br>OK<br>127.0.0.1:6379[3]&gt; </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- ```bash</span><br><span class="line">  127.0.0.1:6379[3]&gt; flushdb#清除当前数据库（flushall删除全部数据库）</span><br><span class="line">  OK</span><br><span class="line">  127.0.0.1:6379[3]&gt; keys *</span><br><span class="line">  (empty array)</span><br></pre></td></tr></table></figure></li></ul></li></ul><blockquote><p> Redis&gt;=6版本开始支持多线程</p></blockquote><h2 id="五大数据类型"><a href="#五大数据类型" class="headerlink" title="五大数据类型"></a>五大数据类型</h2><h3 id="Redis-Key"><a href="#Redis-Key" class="headerlink" title="Redis-Key"></a>Redis-Key</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379[1]&gt; exists name<span class="comment">#判断当前key是否存在</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379[1]&gt; move name 2<span class="comment">#移动当前的key到另一个库</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379[2]&gt; expire name 10<span class="comment">#设置key的过期时间，单位是秒</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379[2]&gt; ttl name<span class="comment">#查看当前key的剩余时间</span></span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; del name<span class="comment">#删除当前key</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379[1]&gt; <span class="built_in">type</span> name<span class="comment">#查看key的一个类型</span></span><br><span class="line">string</span><br></pre></td></tr></table></figure><h3 id="String（字符串）"><a href="#String（字符串）" class="headerlink" title="String（字符串）"></a>String（字符串）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379[1]&gt; <span class="built_in">set</span> key1 v1<span class="comment">#设置值</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; get key1<span class="comment">#获得值</span></span><br><span class="line"><span class="string">&quot;v1&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; exists key1<span class="comment">#判断某一个key是否存在</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379[1]&gt; append key1 <span class="string">&quot;hello&quot;</span><span class="comment">#追加对应key的value值，如果空-&gt;相当于set key，非空-&gt;添加值到value的结尾。</span></span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br><span class="line">127.0.0.1:6379[1]&gt; get key1</span><br><span class="line"><span class="string">&quot;v1hello&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; strlen key1<span class="comment">#返回key的string类型value的长度。如果key对应的非string类型，就返回错误。</span></span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br><span class="line">127.0.0.1:6379[1]&gt; append key1 <span class="string">&quot;,llc&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 11</span><br><span class="line">127.0.0.1:6379[1]&gt; get key1</span><br><span class="line"><span class="string">&quot;v1hello,llc&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; strlen key1</span><br><span class="line">(<span class="built_in">integer</span>) 11</span><br><span class="line"><span class="comment">############################################################################################################</span></span><br><span class="line">127.0.0.1:6379[1]&gt; <span class="built_in">set</span> views 0<span class="comment">#初始浏览量为0</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; get views</span><br><span class="line"><span class="string">&quot;0&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; incr views<span class="comment">#自增1</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379[1]&gt; incr views</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379[1]&gt; get views</span><br><span class="line"><span class="string">&quot;2&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; decr views<span class="comment">#自减1</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379[1]&gt; decr views</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379[1]&gt; decr views</span><br><span class="line">(<span class="built_in">integer</span>) -1</span><br><span class="line">127.0.0.1:6379[1]&gt; get views</span><br><span class="line"><span class="string">&quot;-1&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; incrby views 10<span class="comment">#可以设置步长，指定增量</span></span><br><span class="line">(<span class="built_in">integer</span>) 9</span><br><span class="line">127.0.0.1:6379[1]&gt; incrby views 10</span><br><span class="line">(<span class="built_in">integer</span>) 19</span><br><span class="line">127.0.0.1:6379[1]&gt; decrby views 10</span><br><span class="line">(<span class="built_in">integer</span>) 9</span><br><span class="line">127.0.0.1:6379[1]&gt; decrby views 5</span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br><span class="line"><span class="comment">############################################################################################################</span></span><br><span class="line"><span class="comment">#字符串范围 range</span></span><br><span class="line">127.0.0.1:6379[1]&gt; <span class="built_in">set</span> key1 <span class="string">&quot;hello,llc&quot;</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; get key1</span><br><span class="line"><span class="string">&quot;hello,llc&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; getrange key1 0 3<span class="comment">#截取字符串 [0,3]</span></span><br><span class="line"><span class="string">&quot;hell&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; getrange key1 0 -1<span class="comment">#获取全部的字符串，和get key是一样的</span></span><br><span class="line"><span class="string">&quot;hello,llc&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#替换</span></span><br><span class="line">127.0.0.1:6379[1]&gt; <span class="built_in">set</span> key2 abcdefg</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; get key2</span><br><span class="line"><span class="string">&quot;abcdefg&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; setrange key2 1 xx<span class="comment">#替换指定位置开始的字符串</span></span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br><span class="line">127.0.0.1:6379[1]&gt; get key2</span><br><span class="line"><span class="string">&quot;axxdefg&quot;</span></span><br><span class="line"><span class="comment">############################################################################################################</span></span><br><span class="line"><span class="comment"># setex（set with expire）#设置过期时间</span></span><br><span class="line"><span class="comment"># setnx（set if not exist）#将key设置值为value，如果key不存在，这种情况下等同SET命令。 当key存在时，什么也不做。</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[1]&gt; setex key3 30 <span class="string">&quot;hello&quot;</span><span class="comment">#设置key3的值为hello，30秒后过期</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; ttl key3</span><br><span class="line">(<span class="built_in">integer</span>) 25</span><br><span class="line">127.0.0.1:6379[1]&gt; get key3</span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379[1]&gt; ttl key3</span><br><span class="line">(<span class="built_in">integer</span>) -2</span><br><span class="line">127.0.0.1:6379[1]&gt; setnx mykey <span class="string">&quot;redis&quot;</span>   <span class="comment">#如果mykey不存在，创建mykey</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379[1]&gt; keys *</span><br><span class="line">1) <span class="string">&quot;key1&quot;</span></span><br><span class="line">2) <span class="string">&quot;mykey&quot;</span></span><br><span class="line">3) <span class="string">&quot;key2&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; setnx mykey <span class="string">&quot;MongoDB&quot;</span><span class="comment">#如果mykey存在，创建失败</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379[1]&gt; get mykey</span><br><span class="line"><span class="string">&quot;redis&quot;</span></span><br><span class="line"><span class="comment">############################################################################################################</span></span><br><span class="line"><span class="comment"># MSET 对应给定的keys到他们相应的values上。MSET会用新的value替换已经存在的value，就像普通的SET命令一样。如果你不想覆盖已经存在的values，请参看命令MSETNX。MSET是原子的，所以所有给定的keys是一次性set的。客户端不可能看到这种一部分keys被更新而另外的没有改变的情况。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MGET 返回所有指定的key的value。对于每个不对应string或者不存在的key，都返回特殊值nil。正因为此，这个操作从来不会失败。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MSETNX 对应给定的keys到他们相应的values上。只要有一个key已经存在，MSETNX一个操作都不会执行。 由于这种特性，MSETNX可以实现要么所有的操作都成功，要么一个都不执行，这样可以用来设置不同的key，来表示一个唯一的对象的不同字段。MSETNX是原子的，所以所有给定的keys是一次性set的。客户端不可能看到这种一部分keys被更新而另外的没有改变的情况。</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[1]&gt; mset k1 v1 k2 v2 k3 v3</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; mget k1 k2 k3</span><br><span class="line">1) <span class="string">&quot;v1&quot;</span></span><br><span class="line">2) <span class="string">&quot;v2&quot;</span></span><br><span class="line">3) <span class="string">&quot;v3&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; msetnx k1 v1 k4 v4<span class="comment">#原子性操作，要么一起成功，要么一起失败</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379[1]&gt; get k4</span><br><span class="line">(nil)</span><br><span class="line"></span><br><span class="line"><span class="comment">#对象（貌似可以做到细粒度查询）</span></span><br><span class="line">127.0.0.1:6379[1]&gt; <span class="built_in">set</span> user:2 &#123;name:lisi,age:6&#125;<span class="comment">#设置一个user:2 对象 值为json字符来保存一个对象</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; get user:2</span><br><span class="line"><span class="string">&quot;&#123;name:lisi,age:6&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#key设计：user:&#123;id&#125;:&#123;filed&#125;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[1]&gt; mset user:1:name zhangsan user:1:age 2<span class="comment">#key当作一个对象</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; mget user:1:name user:1:age</span><br><span class="line">1) <span class="string">&quot;zhangsan&quot;</span></span><br><span class="line">2) <span class="string">&quot;2&quot;</span></span><br><span class="line"><span class="comment">############################################################################################################</span></span><br><span class="line">getset <span class="comment">#先get后set</span></span><br><span class="line">127.0.0.1:6379[1]&gt; getset db redis<span class="comment">#如果不存在值，则返回nil</span></span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379[1]&gt; get db</span><br><span class="line"><span class="string">&quot;redis&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; getset db mongodb  <span class="comment">#如果存在值，获取原来的值，并设置新值</span></span><br><span class="line"><span class="string">&quot;redis&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; get db</span><br><span class="line"><span class="string">&quot;mongodb&quot;</span></span><br></pre></td></tr></table></figure><h3 id="List（列表，实际上是一个双向链表）"><a href="#List（列表，实际上是一个双向链表）" class="headerlink" title="List（列表，实际上是一个双向链表）"></a>List（列表，实际上是一个双向链表）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">########################################################################################################### </span></span><br><span class="line">127.0.0.1:6379[1]&gt; lpush list one<span class="comment">#将一个值或多个值插入到表头部</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379[1]&gt; lpush list two</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379[1]&gt; lpush list three</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379[1]&gt; lrange list 0 -1</span><br><span class="line">1) <span class="string">&quot;three&quot;</span></span><br><span class="line">2) <span class="string">&quot;two&quot;</span></span><br><span class="line">3) <span class="string">&quot;one&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; lrange list 0 1</span><br><span class="line">1) <span class="string">&quot;three&quot;</span></span><br><span class="line">2) <span class="string">&quot;two&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; lrange list 0 0</span><br><span class="line">1) <span class="string">&quot;three&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; rpush list right<span class="comment">#将一个值或多个值插入到列表尾部</span></span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br><span class="line">127.0.0.1:6379[1]&gt; lrange list 0 -1</span><br><span class="line">1) <span class="string">&quot;three&quot;</span></span><br><span class="line">2) <span class="string">&quot;two&quot;</span></span><br><span class="line">3) <span class="string">&quot;one&quot;</span></span><br><span class="line">4) <span class="string">&quot;right&quot;</span></span><br><span class="line"><span class="comment">########################################################################################################### </span></span><br><span class="line">127.0.0.1:6379[1]&gt; LPOP list<span class="comment">#移除list的第一个元素</span></span><br><span class="line"><span class="string">&quot;three&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; RPOP list<span class="comment">#移除list的最后一个元素</span></span><br><span class="line"><span class="string">&quot;right&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; LRANGE list 0 -1</span><br><span class="line">1) <span class="string">&quot;two&quot;</span></span><br><span class="line">2) <span class="string">&quot;one&quot;</span></span><br><span class="line"><span class="comment">########################################################################################################### </span></span><br><span class="line">127.0.0.1:6379[1]&gt; LINDEX list 0<span class="comment">#通过下标获取list中的值</span></span><br><span class="line"><span class="string">&quot;two&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; LINDEX list 1</span><br><span class="line"><span class="string">&quot;one&quot;</span></span><br><span class="line"><span class="comment">########################################################################################################### </span></span><br><span class="line">127.0.0.1:6379[1]&gt; LPUSH list one two three</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379[1]&gt; LLEN list<span class="comment">#返回列表的长度</span></span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line"><span class="comment">########################################################################################################### </span></span><br><span class="line">127.0.0.1:6379[1]&gt; LRANGE list 0 -1</span><br><span class="line">1) <span class="string">&quot;three&quot;</span></span><br><span class="line">2) <span class="string">&quot;three&quot;</span></span><br><span class="line">3) <span class="string">&quot;two&quot;</span></span><br><span class="line">4) <span class="string">&quot;one&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; LREM list 2 three<span class="comment">#移除list集合中指定个数的value，精确匹配</span></span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379[1]&gt; LREM list 1 one</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379[1]&gt; LRANGE list 0 -1</span><br><span class="line">1) <span class="string">&quot;two&quot;</span></span><br><span class="line"><span class="comment">########################################################################################################### </span></span><br><span class="line">127.0.0.1:6379[1]&gt; RPUSH list hello hello1 hello2 hello3</span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br><span class="line">127.0.0.1:6379[1]&gt; LTRIM list 2 3<span class="comment">#通过下标截取指定的长度，这个list已经被改变了，截断了只剩下截取的元素！</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; LRANGE list 0 -1</span><br><span class="line">1) <span class="string">&quot;hello2&quot;</span></span><br><span class="line">2) <span class="string">&quot;hello3&quot;</span></span><br><span class="line"><span class="comment">########################################################################################################### </span></span><br><span class="line">127.0.0.1:6379[1]&gt; rpush list hi hi1 hi2 hi3</span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br><span class="line">127.0.0.1:6379[1]&gt; RPOPLPUSH list mylist</span><br><span class="line"><span class="string">&quot;hi3&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; lrange list 0 -1</span><br><span class="line">1) <span class="string">&quot;hi&quot;</span></span><br><span class="line">2) <span class="string">&quot;hi1&quot;</span></span><br><span class="line">3) <span class="string">&quot;hi2&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; lrange mylist 0 -1</span><br><span class="line">1) <span class="string">&quot;hi3&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; rpoplpush list mylist<span class="comment">#移除列表的最后一个元素，将它移动到新的列表中</span></span><br><span class="line"><span class="string">&quot;hi2&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; lrange list 0 -1</span><br><span class="line">1) <span class="string">&quot;hi&quot;</span></span><br><span class="line">2) <span class="string">&quot;hi1&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; lrange mylist 0 -1</span><br><span class="line">1) <span class="string">&quot;hi2&quot;</span></span><br><span class="line">2) <span class="string">&quot;hi3&quot;</span></span><br><span class="line"><span class="comment">###########################################################################################################</span></span><br><span class="line">EXISTS key [key ...]<span class="comment">#返回key是否存在。</span></span><br><span class="line">LSET key index value<span class="comment">#通过索引设置列表元素的值</span></span><br><span class="line">LINSERT key BEFORE|AFTER pivot value<span class="comment">#在列表的元素前或者后插入元素</span></span><br></pre></td></tr></table></figure><h3 id="Set（集合）"><a href="#Set（集合）" class="headerlink" title="Set（集合）"></a>Set（集合）</h3><p>Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">SADD key member1 [member2]</span><br><span class="line"><span class="comment">#向集合添加一个或多个成员</span></span><br><span class="line"></span><br><span class="line">SCARD key</span><br><span class="line"><span class="comment">#获取集合的成员数</span></span><br><span class="line"></span><br><span class="line">SMEMBERS key</span><br><span class="line"><span class="comment">#返回集合中的所有成员</span></span><br><span class="line"></span><br><span class="line">SISMEMBER key member</span><br><span class="line"><span class="comment">#判断 member 元素是否是集合 key 的成员</span></span><br><span class="line"></span><br><span class="line">SREM key member1 [member2]</span><br><span class="line"><span class="comment">#移除集合中一个或多个成员</span></span><br><span class="line"></span><br><span class="line">SRANDMEMBER key [count]</span><br><span class="line"><span class="comment">#返回集合中一个或多个随机数</span></span><br><span class="line"></span><br><span class="line">SPOP key</span><br><span class="line"><span class="comment">#移除并返回集合中的一个随机元素</span></span><br><span class="line"></span><br><span class="line">SMOVE <span class="built_in">source</span> destination member</span><br><span class="line"><span class="comment">#将 member 元素从 source 集合移动到 destination 集合</span></span><br><span class="line"></span><br><span class="line">SDIFF key1 [key2]</span><br><span class="line"><span class="comment">#返回第一个集合与其他集合之间的差异。</span></span><br><span class="line"></span><br><span class="line">SINTER key1 [key2]</span><br><span class="line"><span class="comment">#返回给定所有集合的交集</span></span><br><span class="line"></span><br><span class="line">SUNION key1 [key2]</span><br><span class="line"><span class="comment">#返回所有给定集合的并集</span></span><br></pre></td></tr></table></figure><h3 id="Hash-哈希map"><a href="#Hash-哈希map" class="headerlink" title="Hash(哈希map)"></a>Hash(哈希map)</h3><p>Map集合，key-Map</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">HSET key field value</span><br><span class="line"><span class="comment">#将哈希表 key 中的字段 field 的值设为 value 。</span></span><br><span class="line"></span><br><span class="line">HGET key field</span><br><span class="line"><span class="comment">#获取存储在哈希表中指定字段的值。</span></span><br><span class="line"></span><br><span class="line">HLEN key</span><br><span class="line"><span class="comment">#获取哈希表中字段的数量</span></span><br><span class="line"></span><br><span class="line">HEXISTS key field</span><br><span class="line"><span class="comment">#查看哈希表 key 中，指定的字段是否存在。</span></span><br><span class="line"></span><br><span class="line">HKEYS key</span><br><span class="line"><span class="comment">#获取所有哈希表中的字段</span></span><br><span class="line"></span><br><span class="line">HVALS key</span><br><span class="line"><span class="comment">#获取哈希表中所有值。</span></span><br><span class="line"></span><br><span class="line">HINCRBY key field increment</span><br><span class="line"><span class="comment">#为哈希表 key 中的指定字段的整数值加上增量 increment 。</span></span><br><span class="line"></span><br><span class="line">HSETNX key field value</span><br><span class="line"><span class="comment">#只有在字段 field 不存在时，设置哈希表字段的值。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h2&gt;&lt;h4 id=&quot;关系型数据库：MySQL，Oracle&quot;&gt;&lt;a href=&quot;#关系型数据库：MySQL，Oracle&quot; class=&quot;headerlink&quot; title=&quot;关系型数据库：MySQL，Oracle&quot;&gt;&lt;/a&gt;关系型数据库：MySQL，Oracle&lt;/h4&gt;&lt;h4 id=&quot;文档型数据库：MongoDB&quot;&gt;&lt;a href=&quot;#文档型数据库：MongoDB&quot; class=&quot;headerlink&quot; title=&quot;文档型数据库：MongoDB&quot;&gt;&lt;/a&gt;文档型数据库：MongoDB&lt;/h4&gt;&lt;h4 id=&quot;分布式文件系统：FastDFS&quot;&gt;&lt;a href=&quot;#分布式文件系统：FastDFS&quot; class=&quot;headerlink&quot; title=&quot;分布式文件系统：FastDFS&quot;&gt;&lt;/a&gt;分布式文件系统：FastDFS&lt;/h4&gt;&lt;h4 id=&quot;搜索引擎：solr-elasticsearch&quot;&gt;&lt;a href=&quot;#搜索引擎：solr-elasticsearch&quot; class=&quot;headerlink&quot; title=&quot;搜索引擎：solr elasticsearch&quot;&gt;&lt;/a&gt;搜索引擎：solr elasticsearch&lt;/h4&gt;&lt;h4 id=&quot;内存数据库：Redis-Tair、Memache…&quot;&gt;&lt;a href=&quot;#内存数据库：Redis-Tair、Memache…&quot; class=&quot;headerlink&quot; title=&quot;内存数据库：Redis Tair、Memache…&quot;&gt;&lt;/a&gt;内存数据库：Redis Tair、Memache…&lt;/h4&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>刷题笔记[一]</title>
    <link href="https://llc-zh.github.io/2021/07/12/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E4%B8%80/"/>
    <id>https://llc-zh.github.io/2021/07/12/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E4%B8%80/</id>
    <published>2021-07-12T13:37:57.000Z</published>
    <updated>2021-07-12T13:47:17.464Z</updated>
    
    <content type="html"><![CDATA[<h3 id="leetcode刷题笔记"><a href="#leetcode刷题笔记" class="headerlink" title="leetcode刷题笔记"></a>leetcode刷题笔记</h3><p>给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。</p><p>如果反转后整数超过 32 位的有符号整数的范围 [−231,  231 − 1] ，就返回 0。</p><p>假设环境不允许存储 64 位整数（有符号或无符号）。</p><span id="more"></span><p>示例 1：</p><p>输入：x = 123<br>输出：321<br>示例 2：</p><p>输入：x = -123<br>输出：-321<br>示例 3：</p><p>输入：x = 120<br>输出：21<br>示例 4：</p><p>输入：x = 0<br>输出：0</p><p>提示：</p><p>-231 &lt;= x &lt;= 231 - 1</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/reverse-integer">https://leetcode-cn.com/problems/reverse-integer</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> rev = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (rev &lt; Integer.MIN_VALUE / <span class="number">10</span> || rev &gt; Integer.MAX_VALUE / <span class="number">10</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> digit = x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">            rev = rev * <span class="number">10</span> + digit;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rev;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">作者：LeetCode-Solution</span><br><span class="line">链接：https:<span class="comment">//leetcode-cn.com/problems/reverse-integer/solution/zheng-shu-fan-zhuan-by-leetcode-solution-bccn/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><p><img src="C:\Users\jl\Pictures\11.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;leetcode刷题笔记&quot;&gt;&lt;a href=&quot;#leetcode刷题笔记&quot; class=&quot;headerlink&quot; title=&quot;leetcode刷题笔记&quot;&gt;&lt;/a&gt;leetcode刷题笔记&lt;/h3&gt;&lt;p&gt;给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。&lt;/p&gt;
&lt;p&gt;如果反转后整数超过 32 位的有符号整数的范围 [−231,  231 − 1] ，就返回 0。&lt;/p&gt;
&lt;p&gt;假设环境不允许存储 64 位整数（有符号或无符号）。&lt;/p&gt;</summary>
    
    
    
    
    <category term="刷题" scheme="https://llc-zh.github.io/tags/%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://llc-zh.github.io/2021/07/11/hello-world/"/>
    <id>https://llc-zh.github.io/2021/07/11/hello-world/</id>
    <published>2021-07-11T02:11:21.570Z</published>
    <updated>2021-07-11T02:11:21.570Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
